{"ast":null,"code":"import * as React from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport { Billboard } from './Billboard.js';\nimport { Plane } from './shapes.js';\nimport { useTexture } from './useTexture.js';\nconst CLOUD_URL = 'https://rawcdn.githack.com/pmndrs/drei-assets/9225a9f1fbd449d9411125c2f419b843d0308c9f/cloud.png';\n\nfunction Cloud(_ref) {\n  let {\n    opacity = 0.5,\n    speed = 0.4,\n    width = 10,\n    depth = 1.5,\n    segments = 20,\n    ...props\n  } = _ref;\n  const group = React.useRef();\n  const texture = useTexture(CLOUD_URL);\n  const clouds = React.useMemo(() => [...new Array(segments)].map((_, index) => ({\n    x: width / 2 - Math.random() * width,\n    y: width / 2 - Math.random() * width,\n    scale: 0.4 + Math.sin((index + 1) / segments * Math.PI) * ((0.2 + Math.random()) * 10),\n    density: Math.max(0.2, Math.random()),\n    rotation: Math.max(0.002, 0.005 * Math.random()) * speed\n  })), [width, segments, speed]);\n  useFrame(state => {\n    var _group$current;\n\n    return (_group$current = group.current) == null ? void 0 : _group$current.children.forEach((cloud, index) => {\n      cloud.children[0].rotation.z += clouds[index].rotation;\n      cloud.children[0].scale.setScalar(clouds[index].scale + (1 + Math.sin(state.clock.getElapsedTime() / 10)) / 2 * index / 10);\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"group\", props, /*#__PURE__*/React.createElement(\"group\", {\n    position: [0, 0, segments / 2 * depth],\n    ref: group\n  }, clouds.map((_ref2, index) => {\n    let {\n      x,\n      y,\n      scale,\n      density\n    } = _ref2;\n    return /*#__PURE__*/React.createElement(Billboard, {\n      key: index,\n      position: [x, y, -index * depth]\n    }, /*#__PURE__*/React.createElement(Plane, {\n      scale: scale,\n      rotation: [0, 0, 0]\n    }, /*#__PURE__*/React.createElement(\"meshStandardMaterial\", {\n      map: texture,\n      transparent: true,\n      opacity: scale / 6 * density * opacity,\n      depthTest: false\n    })));\n  })));\n}\n\nexport { Cloud };","map":{"version":3,"names":["React","useFrame","Billboard","Plane","useTexture","CLOUD_URL","Cloud","opacity","speed","width","depth","segments","props","group","useRef","texture","clouds","useMemo","Array","map","_","index","x","Math","random","y","scale","sin","PI","density","max","rotation","state","_group$current","current","children","forEach","cloud","z","setScalar","clock","getElapsedTime","createElement","position","ref","key","transparent","depthTest"],"sources":["/Users/khuong/Desktop/ReactJS/r3f-audio-analyser-forked/node_modules/@react-three/drei/core/Cloud.js"],"sourcesContent":["import * as React from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport { Billboard } from './Billboard.js';\nimport { Plane } from './shapes.js';\nimport { useTexture } from './useTexture.js';\n\nconst CLOUD_URL = 'https://rawcdn.githack.com/pmndrs/drei-assets/9225a9f1fbd449d9411125c2f419b843d0308c9f/cloud.png';\nfunction Cloud({\n  opacity = 0.5,\n  speed = 0.4,\n  width = 10,\n  depth = 1.5,\n  segments = 20,\n  ...props\n}) {\n  const group = React.useRef();\n  const texture = useTexture(CLOUD_URL);\n  const clouds = React.useMemo(() => [...new Array(segments)].map((_, index) => ({\n    x: width / 2 - Math.random() * width,\n    y: width / 2 - Math.random() * width,\n    scale: 0.4 + Math.sin((index + 1) / segments * Math.PI) * ((0.2 + Math.random()) * 10),\n    density: Math.max(0.2, Math.random()),\n    rotation: Math.max(0.002, 0.005 * Math.random()) * speed\n  })), [width, segments, speed]);\n  useFrame(state => {\n    var _group$current;\n\n    return (_group$current = group.current) == null ? void 0 : _group$current.children.forEach((cloud, index) => {\n      cloud.children[0].rotation.z += clouds[index].rotation;\n      cloud.children[0].scale.setScalar(clouds[index].scale + (1 + Math.sin(state.clock.getElapsedTime() / 10)) / 2 * index / 10);\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"group\", props, /*#__PURE__*/React.createElement(\"group\", {\n    position: [0, 0, segments / 2 * depth],\n    ref: group\n  }, clouds.map(({\n    x,\n    y,\n    scale,\n    density\n  }, index) => /*#__PURE__*/React.createElement(Billboard, {\n    key: index,\n    position: [x, y, -index * depth]\n  }, /*#__PURE__*/React.createElement(Plane, {\n    scale: scale,\n    rotation: [0, 0, 0]\n  }, /*#__PURE__*/React.createElement(\"meshStandardMaterial\", {\n    map: texture,\n    transparent: true,\n    opacity: scale / 6 * density * opacity,\n    depthTest: false\n  }))))));\n}\n\nexport { Cloud };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}